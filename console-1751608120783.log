function cube(n){
    const promise = new Promise((res , rej)=>{
        setTimeout(()=>{
        let ans =  n * n * n;
        rej("Hame nhi pta");
    } , 3000);
    })

    return promise;
}
undefined
cube(3).then((ans)=>console.log(ans)).catch((err)=>console.log(err));
Promise {<pending>}
VM22:1 Hame nhi pta
function cube(n){
    const promise = new Promise((res , rej)=>{
        setTimeout(()=>{
        let ans =  n * n * n;
        res(ans);
    } , 3000);
    })

    return promise;
}
undefined
cube(3).then((ans)=>cube(ans).then((ans1)=>cube(ans1).then((ans2)=>console.log(ans2)).catch((err)=>console.log(err))).catch((err)=>console.log(err))).catch((err)=>console.log(err));
Promise {<pending>}
VM386:1 7625597484987
fetch("https://fakestoreapi.com/products").then((res)=>console.log(res)).catch((err)=>console.log(err));
Promise {<pending>}
VM663:1 Response {type: 'cors', url: 'https://fakestoreapi.com/products', redirected: false, status: 200, ok: true, …}body: (...)bodyUsed: falseheaders: Headers {}[[Prototype]]: Headersok: trueredirected: falsestatus: 200statusText: ""type: "cors"url: "https://fakestoreapi.com/products"[[Prototype]]: Response
fetch("https://fakestoreapi.com/products").then((res)=>res.json().then((data)=>console.log(data)).catch((err)=>console.log(err))).catch((err)=>console.log(err));
Promise {<pending>}
VM843:1 (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
async function getData(){
   const response = await fetch("https://fakestoreapi.com/products");
    const data = await response.json();
    console.log(data);
} 
undefined
getData();
Promise {<pending>}
VM1067:4 (20) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
